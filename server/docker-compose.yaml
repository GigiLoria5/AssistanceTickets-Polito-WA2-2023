version: '3.8'
services:
  db:
    image: postgres
    container_name: pg_container
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      retries: 2
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=p4ssw0rd
      - POSTGRES_DB=assistance_tickets
    ports:
      - "5432:5432"
    volumes:
      - ./init-data/dump.sql:/docker-entrypoint-initdb.d/dump.sql

  keycloak-curl-test:
    container_name: keycloak-curl-test
    image: alpine:latest
    command: sh -c "apk add --no-cache curl && while true; do sleep 5; if curl --head -fsS http://keycloak:8080/health/ready; then echo 'Keycloak ready' && exit 0; else echo 'Keycloak not ready'; fi; done"

  keycloak:
    image: quay.io/keycloak/keycloak:21.1.1
    container_name: keycloak
    command:
      - start-dev --import-realm --hostname-port=3000 --health-enabled=true
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    ports:
      - "3000:8080"
    volumes:
      - ./init-data/SpringBootKeycloak-realm.json:/opt/keycloak/data/import/myrealm.json
      - ./init-data/keycloak-healthcheck.sh:/test/healthcheck.sh

  app:
    image: pepaunz/assistance-tickets:v0.3
    container_name: g29-assistance-tickets-container
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      keycloak-curl-test:
        condition: service_completed_successfully
    env_file:
      - ./init-data/app.env
    ports:
      - "8080:8080"

